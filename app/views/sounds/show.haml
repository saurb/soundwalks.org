- content_for :title do
	#{@sound.soundwalk.title}: Sound #{@sound.id}

- content_for :javascript do
	%script{:src => "http://maps.google.com/maps?file=api&amp;v=2&amp;sensor=false&amp;key=#{Geokit::Geocoders::google}"}
	= javascript_include_tag 'lib/jquery', 'editable', 'sounds', 'sound-map'

- content_for :meta do
	= render :partial => 'meta/authenticity'
	
- sound_index = @sound.soundwalk.sounds.index(@sound)
- previous_index = sound_index > 0 ? sound_index - 1 : @sound.soundwalk.sounds.size - 1;
- next_index = sound_index < @sound.soundwalk.sounds.size - 1 ? sound_index + 1 : 0;

= render :partial => 'sound_profile', :locals => {:soundwalk => @sound.soundwalk, :sound => @sound, :edit_title => true, :previous_index => previous_index, :next_index => next_index}
	
%p=render :partial => 'embed_sound', :locals => {:soundwalk => @sound.soundwalk, :sound => @sound}

%div#sound-map

%div#sound-details
	- if logged_in? && current_user.id == @sound.soundwalk.user.id
		%h2 Description
		%div#description{:class => 'editable', 
			'data-object' => 'sound', 
			'data-edits' => 'description', 
			'data-shows' => 'formatted_description', 
			'data-url' => soundwalk_sound_path(@sound.soundwalk, @sound), 
			'data-value' => @sound.description}
			= (@sound.description && @sound.description.size > 0) ? textilize(h @sound.description) : '<p>Click here to add a description.</p>'
	- elsif @sound.description
		%h2 Description
		%div#description= textilize(h @sound.description)
	
	%h2 Tags
	%p{:style => 'text-align: center'}
		%span.detail{'data-shows' => 'all_tags_formatted'} 
			#{@sound.tags.size > 0 ? formatted_sound_tags(@sound) : 'This sound has not been tagged yet.'}
			-#{@sound.tags.size > 0 ? @sound.tags.join(', ') : 'This sound has not been tagged yet.'}
			
	- if logged_in?
		%p
			%span.label Your tags:
			%span.detail
				- user_tags = current_user.owned_taggings.find(:all, :conditions => {:taggable_id => @sound}).collect {|tagging| tagging.tag}
				
				%span.editable{'data-edits' => 'user_tags', 
					'data-shows' => 'user_tags', 
					'data-url' => "#{soundwalk_sound_path(@sound.soundwalk, @sound)}/tags",
					'data-value' => (user_tags.size > 0) ? user_tags.join(', ') : 'Separate multiple tags with commas.'}
					#{(user_tags.size > 0) ? user_tags.join(', ') : 'Click here to add tags.'}
	%h2 Details
	%p		
		%span.label Duration:
		%span.detail #{sprintf('%.2f', @sound.samples.to_f / @sound.sample_rate.to_f)}s (#{@sound.samples} samples, #{@sound.frames} frames)
	%p
		%span.label Recorded at:
		%span.detail= @sound.recorded_at
	%p
		%span.label Created at:
		%span.detail= @sound.created_at
	%p
		%span.label Updated at:
		%span.detail= @sound.updated_at
		
	-if logged_in? && current_user.admin?
		%p
			%span.label Sample rate:
			%span.detail #{@sound.sample_rate} Hz
		%p
			%span.label Frame length:
			%span.detail #{@sound.frame_length}s (#{@sound.frame_size} samples)
		%p
			%span.label Hop size:
			%span.detail #{@sound.hop_length}s (#{@sound.hop_size} samples)
		%p
			%span.label Spectrum size:
			%span.detail= @sound.spectrum_size

%div.clear

- if logged_in? && current_user.admin?
	%h2 Features
	%div#sound-features
		= feature_chart('loudness', limit_granularity(@sound.trajectory(:loudness)), 'ab4444')
		= feature_chart('temporal sparsity', limit_granularity(@sound.trajectory(:temporal_sparsity)), '44ab44')
		= feature_chart('spectral sparsity', limit_granularity(@sound.trajectory(:spectral_sparsity)), '4444ab')
		= feature_chart('spectral centroid', limit_granularity(@sound.trajectory(:spectral_centroid)), 'abab44')
		= feature_chart('transient index', limit_granularity(@sound.trajectory(:transient_index)), '44abab')
		= feature_chart('harmonicity', limit_granularity(@sound.trajectory(:harmonicity)), 'ab44ab')
